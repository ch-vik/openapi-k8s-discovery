name: Build and Push Docker Images

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_OPERATOR: ${{ github.repository }}-operator
  IMAGE_NAME_SERVER: ${{ github.repository }}-server

jobs:
  docker_operator:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: tag-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $VERSION"

          # Check if it's a pre-release
          if [[ "$VERSION" == *"-"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
            echo "This is a pre-release version"
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
            echo "This is a final release version"
          fi
          OPERATOR_VERSION=$(grep '^version = ' crates/openapi-k8s-operator/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "OPERATOR_VERSION=$OPERATOR_VERSION" >> $GITHUB_OUTPUT
          echo "Operator version from Cargo.toml: $OPERATOR_VERSION"

      - name: Build and push operator image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./crates/openapi-k8s-operator/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}:${{ steps.tag-version.outputs.OPERATOR_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}:${{ steps.tag-version.outputs.VERSION}}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_OPERATOR }}:latest
          labels: |
            org.opencontainers.image.title=OpenAPI K8s Operator
            org.opencontainers.image.description=Kubernetes operator for discovering and centralizing OpenAPI documentation
            org.opencontainers.image.version=${{ steps.tag-version.outputs.OPERATOR_VERSION }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha,scope=operator
          cache-to: type=gha,mode=max,scope=operator
  docker_docserver:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: tag-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $VERSION"

          # Check if it's a pre-release
          if [[ "$VERSION" == *"-"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
            echo "This is a pre-release version"
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
            echo "This is a final release version"
          fi
          SERVER_VERSION=$(grep '^version = ' crates/openapi-doc-server/Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "SERVER_VERSION=$SERVER_VERSION" >> $GITHUB_OUTPUT
          echo "Operator version from Cargo.toml: $SERVER_VERSION"

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./crates/openapi-doc-server/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVER }}:${{ steps.tag-version.outputs.SERVER_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVER }}:${{ steps.tag-version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVER }}:latest
          labels: |
            org.opencontainers.image.title=OpenAPI Doc Server
            org.opencontainers.image.description=OpenAPI documentation server with Scalar UI
            org.opencontainers.image.version=${{ steps.tag-version.outputs.SERVER_VERSION }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha,scope=server
          cache-to: type=gha,mode=max,scope=server
